#!/bin/bash
# https://stackoverflow.com/a/7522866
if ! type "aws" >/dev/null 2>&1; then
    # no aws; nothing to do
    true
else

    # from: https://gist.github.com/lukechilds/a83e1d7127b78fef38c2914c4ececc3c
    get_latest_release() {
        curl --silent -H "Authorization: token ${GITHUB_API_TOKEN}" \
            "https://api.github.com/repos/$1/releases/latest" |           # Get latest release from GitHub api
            grep '"tag_name":' |                                          # Get tag line
            sed -E 's/.*"([^"]+)".*/\1/'                                  # Pluck JSON value
    }

    # required version, so we know if we should try to upgrade
    requiredVersion="$(get_latest_release 99designs/aws-vault)"
    if [ -z "${requiredVersion}" ]; then
        echo "[aws-vault] failed to fetch latest version"
        #exit 2
    fi

    # if we don't have it installed
    if ! type "aws-vault" >/dev/null 2>&1; then
        currentVersion="v0.0.0"
    else
        currentVersion="$(aws-vault --version 2>&1)"
    fi

    if [ "${requiredVersion}" != "${currentVersion}" ]; then
        # we do not want thew linux version installed on a mac
        # assume we're smart and have already installed brew
        case "$(uname)" in
        Darwin*)
            # although brew install thing@version is suggested online, it
            # doesn't seem to work with casks, or aws-vault specifically
            # .. so we just install "latest" whenever we don't match

            if [ "${currentVersion}" = "v0.0.0" ]; then
                echo "[aws-vault] running: brew cask install aws-vault"
                brew install cask aws-vault
            else
                echo "[aws-vault] running: brew cask upgrade aws-vault"
                echo "[aws-vault] installed (${currentVersion}) != desired (${requiredVersion})"
                brew upgrade --cask aws-vault
            fi
            ;;

        Linux)

            echo "[aws-vault] Installing ${requiredVersion}â€¦"
            curl -sL -o ~/bin/aws-vault "https://github.com/99designs/aws-vault/releases/download/${requiredVersion}/aws-vault-linux-amd64"
            chmod 0755 ~/bin/aws-vault
            hash -r
            echo '[aws-vault] installed; more information: https://github.com/99designs/aws-vault#quick-start'
            echo -n '[aws-vault] '
            ;;

        *)
            echo "[aws-vault] not sure what flavour you are"
            #exit
            ;;
        esac

        aws-vault --version 2>&1
    fi

    # always do this is we have aws-vault (and not jusst if versions don't match
    case "$(uname)" in
    Darwin*) ;;

    \
        Linux)
        # This is as close to 'required' as you can be, unless you want
        # to mess about with other stoarage options on your own
        # This is an export, so will only work in situations where this
        # file is `source`d
        # If you're cribbing from this file, you'll probably need to
        # add this to your own ~/.{bash,zhs}rc file
        #export AWS_VAULT_BACKEND=file
        # this seems to work better than the file based method
        # these URLs might be useful:
        # https://www.tomica.net/blog/2019/10/configuring-aws-vault-with-password-store/
        # https://www.tomica.net/blog/2015/11/pass-password-manager/
        # https://stackoverflow.com/a/34132924
        # and in my case:
        #  pass init 3885BB11
        export AWS_VAULT_PASS_PREFIX=aws-vault
        export AWS_VAULT_BACKEND=pass
        ;;
    *)
        echo "[aws-vault] not sure what flavour you are"
        #exit
        ;;
    esac

    # a couple of lazy aliases
    export yourDeveloperProfile="${yourDeveloperProfile:-profile-name-missing}"
    alias avtf='aws-vault exec $yourDeveloperProfile -- terraform'

fi
