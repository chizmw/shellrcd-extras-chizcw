#!/bin/bash

# https://stackoverflow.com/a/7522866
if ! type "aws" >/dev/null; then
    # no aws; nothing to do
    true
elif [ ! -d ~/.aws ]; then
    # no aws directory .. better to leave well alone
    true
else
    host="${HOST:-}"
    if [ -z "${host}" ]; then
        host="$(hostname)"
    fi

    CONFIG_FILENAME_PREFIX="awscli_sso_config"

    # only do this if it looks like we're on a zoopla box
    case $host in
        macbook.zoopla|Chisels-Mac*|*.dev.uk|chisel-zpg.local|*.eu-west-1.compute.internal)
            # make it configurable with selfish defaults for the script author
            DEFAULT_AWS_SSO_ROLE_NAME="${SHELLRCD_AWS_SSO_ROLE_NAME:-PlatAdmins}"
            USER_PROFILE_BY_NAME="${SHELLRCD_AWS_USER_PROFILE_NAME:-chisel.malik-wright}"

            # lifted from tmux-continuum
            # this doesn't quite seem to work though; we sometimes get double
            # [profile]d if a couple of shells start at the same time
            acquire_lock() {
                if [ -f /tmp/.shellrcd-awscli.lock ]; then
                    return 1 # it's already there
                else
                    touch /tmp/.shellrcd-awscli.lock
                    return 0
                fi
            }

            # exit immediately if we can't acquire the lockfile
            if ! acquire_lock; then
                echo "[Another terminal is already updating the aws config. Aborting in this terminal.]";
            else
                ACCOUNT_PATH=$(urlencode "multiaccount/${CONFIG_FILENAME_PREFIX}.txt")

                # make sure the ~/.aws/config is up to date
                set -x
                curl --header "PRIVATE-TOKEN: $GITLAB_SAAS_API_TOKEN" \
                    -o "$HOME/.aws/config" \
                    "https://gitlab.com/api/v4/projects/29401708/repository/files/${ACCOUNT_PATH}/raw?ref=master"
                set +x

                # make sure we set the [default] sso_role_name
                # because we know the format of the file we grabbed, and it
                # only has this once, we don't need to go heavy on sanity
                # checking for multiple matches
                # mac sed and all other sed differ how they treat -i
                case $(uname -s) in
                    Darwin)
                        i_arg="-i.bak"
                        ;;
                    *)
                        i_arg="-i.bak"
                        ;;
                esac
                sed "${i_arg}" "s/^sso_role_name = .*/sso_role_name = $DEFAULT_AWS_SSO_ROLE_NAME/" ~/.aws/config

                # if using aws-sso, assume we're using aws-vault, and add the empty profile block we will have wiped out with the downloadgqq
                if [ "${USE_AWS_SSO}" = "1" ] && [ -n "${USER_PROFILE_BY_NAME}" ]; then
                    for f in ~/.aws/config*; do
                        echo -e "\n\n[profile ${USER_PROFILE_BY_NAME}]" >> "${f}"
                    done
                fi

                rm /tmp/.shellrcd-awscli.lock
            fi
            ;;
    esac
fi
